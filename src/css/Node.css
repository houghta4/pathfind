.node {
    width: 40px;
    height: 40px;
    border: 1px solid black;
}

.node-start {
    background-color: green;;
}

.node-end {
    background-color: red;
}

/* TODO maybe in the future this will be an image? */
.node-wall {
    background-color: black;
    /* animation-name: wallAnimation;
    animation-duration: .1s;
    animation-timing-function: ease-out;
    animation-delay: 0;
    animation-direction: alternate;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
    animation-play-state: running; */
}

.node-visited {
    animation-name: visitedAnimation;
    animation-duration: 1.5s;
    animation-timing-function: ease-out;
    animation-delay: 0;
    animation-direction: alternate;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
    animation-play-state: running;
}

.node-path {
    animation-name: shortestPath;
    animation-duration: 2s;
    animation-timing-function: ease-out;
    animation-delay: 0;
    animation-direction: normal;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
    animation-play-state: running;
}

/* TODO find good way to animate clear. Can't add a class then remove it without screwing up animation */
/* .node-reset {
    animation-name: resetMatrix;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    animation-delay: 0;
    animation-direction: alternate;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
    animation-play-state: running;
} */

/* animations */


/* TODO each keyframe is causing an event to trigger, so creating walls while holding down just immediately removes them :( */
/* @keyframes wallAnimation {
    0% {
        border-radius: 100%;
        transform: scale(.5);
    }
    100% {
        border-radius: 0%;
        transform: scale(1);
    }
} */

@keyframes visitedAnimation {
    0% {
        transform: scale(.3);  /*  shrinks element  */
        background-color: aqua;
        border-radius: 10%;
    }

    25% {
        background-color: aqua;
        border-radius: 15%;
    }

    50% {
        transform: scale(1.3);
        background-color: aqua;
        border-radius: 35%;
    }

    75% {
        transform: scale(1.1);
        background-color: aqua;
        border-radius: 25%;
    }

    100% {
        transform: scale(1);
        background-color: aqua;
        border-radius: 0%;
    }
}

@keyframes shortestPath {
    0% {
        transform: scale(.3);  /*  shrinks element  */
        border-radius: 10%;
    }

    25% {
        background-color: yellow;
        border-radius: 15%;
    }

    50% {
        background-color: orange;
        border-radius: 25%;
    }

    75% {
        transform: scale(1.2);
        background-color: orange;
        border-radius: 15%;
    }

    100% {
        transform: scale(1);
        background-color: yellow;
        border-radius: 0%;
    }
}
